{
  "_args": [
    [
      {
        "raw": "shell-quote@^1.6.1",
        "scope": null,
        "escapedName": "shell-quote",
        "name": "shell-quote",
        "rawSpec": "^1.6.1",
        "spec": ">=1.6.1 <2.0.0",
        "type": "range"
      },
      "/Users/ants/Documents/前端学习/开课吧第16期全栈/vue-study-cyy/ssr/node_modules/launch-editor"
    ]
  ],
  "_cnpm_publish_time": 1567324000669,
  "_from": "shell-quote@^1.6.1",
  "_hasShrinkwrap": false,
  "_id": "shell-quote@1.7.2",
  "_location": "/shell-quote",
  "_nodeVersion": "12.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/shell-quote_1.7.2_1567324000519_0.9972134593231239"
  },
  "_npmUser": {
    "name": "goto-bus-stop",
    "email": "renee@kooi.me"
  },
  "_npmVersion": "6.11.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shell-quote@^1.6.1",
    "scope": null,
    "escapedName": "shell-quote",
    "name": "shell-quote",
    "rawSpec": "^1.6.1",
    "spec": ">=1.6.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/launch-editor"
  ],
  "_resolved": "https://registry.npm.taobao.org/shell-quote/download/shell-quote-1.7.2.tgz",
  "_shasum": "67a7d02c76c9da24f99d20808fcaded0e0e04be2",
  "_shrinkwrap": null,
  "_spec": "shell-quote@^1.6.1",
  "_where": "/Users/ants/Documents/前端学习/开课吧第16期全栈/vue-study-cyy/ssr/node_modules/launch-editor",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/node-shell-quote/issues"
  },
  "dependencies": {},
  "description": "quote and parse shell commands",
  "devDependencies": {
    "tape": "4"
  },
  "directories": {},
  "dist": {
    "shasum": "67a7d02c76c9da24f99d20808fcaded0e0e04be2",
    "size": 6607,
    "noattachment": false,
    "tarball": "https://registry.npm.taobao.org/shell-quote/download/shell-quote-1.7.2.tgz"
  },
  "gitHead": "89a1993809eb7620ec985c3b6869c9079287c35a",
  "homepage": "https://github.com/substack/node-shell-quote",
  "keywords": [
    "command",
    "parse",
    "quote",
    "shell"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "goto-bus-stop",
      "email": "renee@kooi.me"
    },
    {
      "name": "jiwaddell",
      "email": "jacob.im.waddell@gmail.com"
    },
    {
      "name": "karissa",
      "email": "krmckelv@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "shell-quote",
  "optionalDependencies": {},
  "publish_time": 1567324000669,
  "readme": "# shell-quote\n\nParse and quote shell commands.\n\n# example\n\n## quote\n\n``` js\nvar quote = require('shell-quote').quote;\nvar s = quote([ 'a', 'b c d', '$f', '\"g\"' ]);\nconsole.log(s);\n```\n\noutput\n\n```\na 'b c d' \\$f '\"g\"'\n```\n\n## parse\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('a \"b c\" \\\\$def \\'it\\\\\\'s great\\'');\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'a', 'b c', '\\\\$def', 'it\\'s great' ]\n```\n\n## parse with an environment variable\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep --boop=\"$PWD\"', { PWD: '/home/robot' });\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'beep', '--boop=/home/robot' ]\n```\n\n## parse with custom escape charcter\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep --boop=\"$PWD\"', { PWD: '/home/robot' }, { escape: '^' });\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'beep', '--boop=/home/robot' ]\n```\n\n## parsing shell operators\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep || boop > /byte');\nconsole.dir(xs);\n```\n\noutput:\n\n```\n[ 'beep', { op: '||' }, 'boop', { op: '>' }, '/byte' ]\n```\n\n## parsing shell comment\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep > boop # > kaboom');\nconsole.dir(xs);\n```\n\noutput:\n\n```\n[ 'beep', { op: '>' }, 'boop', { comment: '> kaboom' } ]\n```\n\n# methods\n\n``` js\nvar quote = require('shell-quote').quote;\nvar parse = require('shell-quote').parse;\n```\n\n## quote(args)\n\nReturn a quoted string for the array `args` suitable for using in shell\ncommands.\n\n## parse(cmd, env={})\n\nReturn an array of arguments from the quoted string `cmd`.\n\nInterpolate embedded bash-style `$VARNAME` and `${VARNAME}` variables with\nthe `env` object which like bash will replace undefined variables with `\"\"`.\n\n`env` is usually an object but it can also be a function to perform lookups.\nWhen `env(key)` returns a string, its result will be output just like `env[key]`\nwould. When `env(key)` returns an object, it will be inserted into the result\narray like the operator objects.\n\nWhen a bash operator is encountered, the element in the array with be an object\nwith an `\"op\"` key set to the operator string. For example:\n\n```\n'beep || boop > /byte'\n```\n\nparses as:\n\n```\n[ 'beep', { op: '||' }, 'boop', { op: '>' }, '/byte' ]\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install shell-quote\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/substack/node-shell-quote.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "1.7.2"
}
