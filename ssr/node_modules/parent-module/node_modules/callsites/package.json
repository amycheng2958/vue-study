{
  "_args": [
    [
      {
        "raw": "callsites@^3.0.0",
        "scope": null,
        "escapedName": "callsites",
        "name": "callsites",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/Users/ants/Documents/前端学习/开课吧第16期全栈/vue-study-cyy/ssr/node_modules/parent-module"
    ]
  ],
  "_cnpm_publish_time": 1554551850657,
  "_from": "callsites@^3.0.0",
  "_hasShrinkwrap": false,
  "_id": "callsites@3.1.0",
  "_location": "/parent-module/callsites",
  "_nodeVersion": "10.15.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/callsites_3.1.0_1554551850429_0.3545214734540718"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "callsites@^3.0.0",
    "scope": null,
    "escapedName": "callsites",
    "name": "callsites",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/parent-module"
  ],
  "_resolved": "https://registry.npm.taobao.org/callsites/download/callsites-3.1.0.tgz",
  "_shasum": "b3630abd8943432f54b3f0519238e33cd7df2f73",
  "_shrinkwrap": null,
  "_spec": "callsites@^3.0.0",
  "_where": "/Users/ants/Documents/前端学习/开课吧第16期全栈/vue-study-cyy/ssr/node_modules/parent-module",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/callsites/issues"
  },
  "dependencies": {},
  "description": "Get callsites from the V8 stack trace API",
  "devDependencies": {
    "ava": "^1.4.1",
    "tsd": "^0.7.2",
    "xo": "^0.24.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b3630abd8943432f54b3f0519238e33cd7df2f73",
    "size": 2433,
    "noattachment": false,
    "tarball": "https://registry.npm.taobao.org/callsites/download/callsites-3.1.0.tgz"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "f89815af2e0255094283c86977f1e679a8fb411b",
  "homepage": "https://github.com/sindresorhus/callsites#readme",
  "keywords": [
    "stacktrace",
    "v8",
    "callsite",
    "callsites",
    "stack",
    "trace",
    "function",
    "file",
    "line",
    "debug"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "callsites",
  "optionalDependencies": {},
  "publish_time": 1554551850657,
  "readme": "# callsites [![Build Status](https://travis-ci.org/sindresorhus/callsites.svg?branch=master)](https://travis-ci.org/sindresorhus/callsites)\n\n> Get callsites from the [V8 stack trace API](https://v8.dev/docs/stack-trace-api)\n\n\n## Install\n\n```\n$ npm install callsites\n```\n\n\n## Usage\n\n```js\nconst callsites = require('callsites');\n\nfunction unicorn() {\n\tconsole.log(callsites()[0].getFileName());\n\t//=> '/Users/sindresorhus/dev/callsites/test.js'\n}\n\nunicorn();\n```\n\n\n## API\n\nReturns an array of callsite objects with the following methods:\n\n- `getThis`: returns the value of `this`.\n- `getTypeName`: returns the type of `this` as a string. This is the name of the function stored in the constructor field of `this`, if available, otherwise the object's `[[Class]]` internal property.\n- `getFunction`: returns the current function.\n- `getFunctionName`: returns the name of the current function, typically its `name` property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n- `getMethodName`: returns the name of the property of `this` or one of its prototypes that holds the current function.\n- `getFileName`: if this function was defined in a script returns the name of the script.\n- `getLineNumber`: if this function was defined in a script returns the current line number.\n- `getColumnNumber`: if this function was defined in a script returns the current column number\n- `getEvalOrigin`: if this function was created using a call to `eval` returns a string representing the location where `eval` was called.\n- `isToplevel`: is this a top-level invocation, that is, is this the global object?\n- `isEval`: does this call take place in code defined by a call to `eval`?\n- `isNative`: is this call in native V8 code?\n- `isConstructor`: is this a constructor call?\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/callsites.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "3.1.0"
}
